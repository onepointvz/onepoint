<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">	
	
	<context:component-scan base-package="com.vzw.wallet" />
	<context:component-scan base-package="com.vzw.wallet.controller" />
	
	<mvc:annotation-driven />
	
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="jsonMessageConverter"/>
            </list>
        </property>
    </bean>
    
    <bean id="methodHandlerExceptionResolver" class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver">
		<property name="messageConverters">
			<list>
				<ref bean="jsonMessageConverter"/>
			</list>
		</property>
	</bean>
    
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
	    <property name="basename" value="classpath:messages" />
	    <property name="defaultEncoding" value="UTF-8"/>
	</bean>
     
    <!-- Configure bean to convert JSON to POJO and vice versa -->
    <bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
    </bean>
    
    
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:/hsqldb.properties"/>
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.connectionUrl}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	
	<!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="jdbcUrl" value="jdbc:mysql://${env.OPENSHIFT_MYSQL_DB_HOST}:${env.OPENSHIFT_MYSQL_DB_PORT}/${env.OPENSHIFT_APP_NAME}"/>
        <property name="driverClass" value="com.mysql.jdbc.Driver"/>
        <property name="user" value="${env.OPENSHIFT_MYSQL_DB_USERNAME}"/>
        <property name="password" value="${env.OPENSHIFT_MYSQL_DB_PASSWORD}"/>
	</bean> -->

	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- <property name="configurationClass" value="org.hibernate.cfg.AnnotationConfiguration"/> -->
		<property name="configLocation" value="classpath:hibernate.cfg.xml" /> 
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					${jdbc.hibernateDialect}
				</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">create-drop</prop>	
				<prop key="hibernate.show_sql">true</prop>		
			</props>
		</property>
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager"/>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<bean id="httpSession" class="org.springframework.mock.web.MockHttpSession">
	</bean>


</beans>